{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koptorinw\\\\Documents\\\\GitHub\\\\TPR\\\\Senior_code\\\\ai-tpr-proj\\\\src\\\\page\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, ChakraProvider, FormControl, FormLabel, Input, VStack, Image, Flex } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const path = process.env.REACT_APP_BASE_API_URL;\n  const [error, setError] = useState(null);\n  const rounter = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.username === '' || formData.password === '') {\n      setError('Username or Password cannot be empty');\n      return toast.error('Username or Password cannot be empty');\n    } else {\n      setError(null);\n    }\n    try {\n      const response = await axios.post(`${path}/api/signin`, formData);\n      if (response.status === 200) {\n        toast.success('Login Successful');\n      }\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.payload.user.username));\n      localStorage.setItem('name', JSON.stringify(response.data.payload.user.name));\n      rounter('/');\n    } catch (error) {\n      if (error.response.data.error === 'User does not exist' || error.response.data.error === 'Invalid credentials') {\n        setError('Username or password is incorrect. Please try again.');\n        toast.error('Username or password is incorrect. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      w: \"100vw\",\n      h: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundImage: \"url('/img/Mae_Ya_waterfall.png')\" // Set your background image here\n      ,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        opacity: \"75%\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          p: \"8\",\n          bg: \"white\",\n          rounded: \"lg\",\n          boxShadow: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            flex: \"1\",\n            bg: \"tomato\",\n            maxH: \"100%\",\n            maxW: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              spacing: \"4\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"username\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"username\",\n                  value: formData.username,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                id: \"password\",\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"password\",\n                  value: formData.password,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                colorScheme: \"blue\",\n                onClick: handleSubmit,\n                children: \"Log In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"green\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            flex: \"1\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            bgColor: \"tomato\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: \"/img/TPR_icon.jpg\",\n              alt: \"Logo\",\n              boxSize: \"200px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"fqlqvE2WLOWv7/Qlp7BoBXAyamY=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Box","Button","ChakraProvider","FormControl","FormLabel","Input","VStack","Image","Flex","axios","useNavigate","Link","ToastContainer","toast","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","username","password","path","process","env","REACT_APP_BASE_API_URL","error","setError","rounter","handleChange","e","name","value","target","handleSubmit","preventDefault","response","post","status","success","localStorage","setItem","data","token","JSON","stringify","payload","user","children","w","h","display","justifyContent","alignItems","backgroundImage","backgroundSize","backgroundPosition","opacity","p","bg","rounded","boxShadow","flex","maxH","maxW","spacing","id","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","colorScheme","onClick","to","bgColor","src","alt","boxSize","position","_c","$RefreshReg$"],"sources":["C:/Users/Koptorinw/Documents/GitHub/TPR/Senior_code/ai-tpr-proj/src/page/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  ChakraProvider,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  VStack,\r\n  Image,\r\n  Flex,\r\n} from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst LoginPage = () => {\r\n  const [formData, setFormData] = useState({ username: '', password: '' });\r\n  const path = process.env.REACT_APP_BASE_API_URL;\r\n  const [error, setError] = useState(null);\r\n\r\n  const rounter = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.username === '' || formData.password === '') {\r\n      setError('Username or Password cannot be empty');\r\n      return toast.error('Username or Password cannot be empty');\r\n    } else {\r\n      setError(null);\r\n    }\r\n    try {\r\n      const response = await axios.post(`${path}/api/signin`, formData);\r\n      if (response.status === 200) {\r\n        toast.success('Login Successful');\r\n      }\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.payload.user.username));\r\n      localStorage.setItem('name', JSON.stringify(response.data.payload.user.name));\r\n      rounter('/');\r\n    } catch (error) {\r\n      if (\r\n        error.response.data.error === 'User does not exist' ||\r\n        error.response.data.error === 'Invalid credentials'\r\n      ) {\r\n        setError('Username or password is incorrect. Please try again.');\r\n        toast.error('Username or password is incorrect. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <Box\r\n        w=\"100vw\"\r\n        h=\"100vh\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backgroundImage=\"url('/img/Mae_Ya_waterfall.png')\" // Set your background image here\r\n        backgroundSize=\"cover\"\r\n        backgroundPosition=\"center\"\r\n      >\r\n        <Box opacity={\"75%\"}>\r\n        <Flex p=\"8\" bg=\"white\" rounded=\"lg\" boxShadow=\"lg\" >\r\n          <Box flex=\"1\" bg=\"tomato\" maxH={\"100%\"} maxW={\"100%\"}>\r\n            <VStack spacing=\"4\">\r\n              <FormControl id=\"username\">\r\n                <FormLabel>Username</FormLabel>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={formData.username}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormControl>\r\n              <FormControl id=\"password\">\r\n                <FormLabel>Password</FormLabel>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={formData.password}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormControl>\r\n              <Button colorScheme=\"blue\" onClick={handleSubmit}>\r\n                Log In\r\n              </Button>\r\n              <Link to=\"/signup\">\r\n                <Button colorScheme=\"green\">Register</Button>\r\n              </Link>\r\n              {/* {error && <Box color=\"red.500\">{error}</Box>} */}\r\n            </VStack>\r\n          </Box>\r\n          <Box flex=\"1\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\" bgColor={\"tomato\"}>\r\n            <Image src=\"/img/TPR_icon.jpg\" alt=\"Logo\" boxSize=\"200px\" />\r\n          </Box>\r\n        </Flex>\r\n        </Box>\r\n      </Box>\r\n      <ToastContainer position=\"top-center\" />\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}