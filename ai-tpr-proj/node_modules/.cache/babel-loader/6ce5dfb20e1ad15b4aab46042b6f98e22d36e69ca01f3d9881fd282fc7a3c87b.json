{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koptorinw\\\\Documents\\\\GitHub\\\\TPR\\\\Senior_code\\\\ai-tpr-proj\\\\src\\\\page\\\\login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, ChakraProvider, FormControl, FormLabel, Input, VStack } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const path = process.env.REACT_APP_BASE_API_URL;\n  const [error, setError] = useState(null);\n  const rounter = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.username === '' || formData.password === '') {\n      setError('Username or Password cannot be empty');\n      return toast.error('Username or Password cannot be empty');\n    } else {\n      setError(null);\n    }\n    try {\n      const response = await axios.post(`${path}/api/signin`, formData);\n      if (response.status === 200) {\n        toast.success('Login Successful');\n      }\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.payload.user.username));\n      localStorage.setItem('name', JSON.stringify(response.data.payload.user.name));\n      rounter('/');\n    } catch (error) {\n      if (error.response.data.error === 'User does not exist' || error.response.data.error === 'Invalid credentials') {\n        setError('Username or password is incorrect. Please try again.');\n        toast.error('Username or password is incorrect. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      w: \"100vw\",\n      h: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      bg: \"blue.100\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        p: \"8\",\n        bg: \"white\",\n        rounded: \"lg\",\n        boxShadow: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            onClick: handleSubmit,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"green\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"fqlqvE2WLOWv7/Qlp7BoBXAyamY=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Box","Button","ChakraProvider","FormControl","FormLabel","Input","VStack","axios","useNavigate","Link","ToastContainer","toast","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","username","password","path","process","env","REACT_APP_BASE_API_URL","error","setError","rounter","handleChange","e","name","value","target","handleSubmit","preventDefault","response","post","status","success","localStorage","setItem","data","token","JSON","stringify","payload","user","children","w","h","display","justifyContent","alignItems","bg","p","rounded","boxShadow","spacing","id","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","colorScheme","onClick","to","position","_c","$RefreshReg$"],"sources":["C:/Users/Koptorinw/Documents/GitHub/TPR/Senior_code/ai-tpr-proj/src/page/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  ChakraProvider,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  VStack,\r\n} from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst LoginPage = () => {\r\n  const [formData, setFormData] = useState({ username: '', password: '' });\r\n  const path = process.env.REACT_APP_BASE_API_URL;\r\n  const [error, setError] = useState(null);\r\n\r\n  const rounter = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.username === '' || formData.password === '') {\r\n      setError('Username or Password cannot be empty');\r\n      return toast.error('Username or Password cannot be empty');\r\n    } else {\r\n      setError(null);\r\n    }\r\n    try {\r\n      const response = await axios.post(`${path}/api/signin`, formData);\r\n      if (response.status === 200) {\r\n        toast.success('Login Successful');\r\n      }\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data.payload.user.username));\r\n      localStorage.setItem('name', JSON.stringify(response.data.payload.user.name));\r\n      rounter('/');\r\n    } catch (error) {\r\n      if (\r\n        error.response.data.error === 'User does not exist' ||\r\n        error.response.data.error === 'Invalid credentials'\r\n      ) {\r\n        setError('Username or password is incorrect. Please try again.');\r\n        toast.error('Username or password is incorrect. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <Box\r\n        w=\"100vw\"\r\n        h=\"100vh\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        bg=\"blue.100\"\r\n      >\r\n        <Box p=\"8\" bg=\"white\" rounded=\"lg\" boxShadow=\"lg\">\r\n          <VStack spacing=\"4\">\r\n            <FormControl id=\"username\">\r\n              <FormLabel>Username</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={formData.username}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"password\">\r\n              <FormLabel>Password</FormLabel>\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n            </FormControl>\r\n            <Button colorScheme=\"blue\" onClick={handleSubmit}>\r\n              Log In\r\n            </Button>\r\n            <Link to=\"/signup\">\r\n              <Button colorScheme=\"green\">Register</Button>\r\n            </Link>\r\n            {/* {error && <Box color=\"red.500\">{error}</Box>} */}\r\n          </VStack>\r\n        </Box>\r\n      </Box>\r\n      <ToastContainer position=\"top-center\" />\r\n    </ChakraProvider>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}