{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koptorinw\\\\Documents\\\\GitHub\\\\TPR\\\\Senior_code\\\\ai-tpr-proj\\\\src\\\\components\\\\leftSideBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Flex, VStack, Box, Text, IconButton, Container, Link } from '@chakra-ui/react';\nimport { AddIcon, DeleteIcon } from '@chakra-ui/icons';\nimport './ScrollBar.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { checkChatroomId, deleteHistory } from '../function/chatHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst breakpoints = {\n  base: '0px',\n  sm: '320px',\n  md: '768px',\n  lg: '960px',\n  xl: '1200px',\n  '2xl': '1536px'\n};\nconst LeftSideBar = ({\n  onCreateChatroom,\n  onSelectChatroom\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const token = localStorage.getItem('token');\n  const [isLogin, setIsLogin] = useState(token ? true : false);\n  const [chatrooms, setChatrooms] = useState(() => {\n    // Initialize chatrooms state with value from local storage, if available\n    const savedChatrooms = localStorage.getItem('chatrooms');\n    return savedChatrooms ? JSON.parse(savedChatrooms) : [];\n  });\n  const [selectedChatroom, setSelectedChatroom] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Save chatrooms to local storage whenever it changes\n    if (token) {\n      localStorage.setItem('chatrooms', JSON.stringify(chatrooms));\n    }\n  }, [chatrooms]);\n  useEffect(() => {\n    if (!token) {\n      setChatrooms([]);\n    }\n  }, [token]);\n  const handleCreateChatroom = () => {\n    const newChatroomName = `Chatroom ${chatrooms.length + 1}`;\n    const newUUID = uuidv4();\n    if (token) {\n      const newChatroom = {\n        id: newUUID,\n        name: newChatroomName\n      };\n      setChatrooms([newChatroom, ...chatrooms]);\n      setSelectedChatroom(newChatroom);\n      onCreateChatroom(newChatroom);\n\n      // Navigate to the newly created chatroom\n      navigate(`/chats/${newUUID}`);\n    }\n  };\n  const handleDeleteChatroom = async index => {\n    const chatroomId = chatrooms[index].id; // Get the UUID of the chatroom to delete\n    const uuidInDB = await checkChatroomId(chatroomId);\n    if (uuidInDB.error) {\n      console.log(\"Error:\", uuidInDB.error);\n      const updatedChatrooms = [...chatrooms];\n      updatedChatrooms.splice(index, 1);\n      setChatrooms(updatedChatrooms);\n\n      // Determine the next chat room to navigate to\n      let nextChatroomIndex;\n      if (index === 0 && updatedChatrooms.length > 0) {\n        nextChatroomIndex = 0; // If deleting the first chat room, navigate to the new first chat room\n      } else if (index === updatedChatrooms.length) {\n        nextChatroomIndex = updatedChatrooms.length - 1; // If deleting the last chat room, navigate to the new last chat room\n      } else {\n        nextChatroomIndex = index; // Navigate to the chat room that shifted up to the deleted chat room's position\n      }\n      if (updatedChatrooms.length > 0) {\n        // Navigate to the next chat room\n        navigate(`/chats/${updatedChatrooms[nextChatroomIndex].id}`);\n      } else {\n        // If no more chat rooms, navigate to a default route or home page\n        navigate('/');\n      }\n    } else {\n      console.log(\"Delete\");\n      const res = await deleteHistory(chatroomId); // Pass the chatroom ID to deleteHistory function\n\n      if (res === 200) {\n        const updatedChatrooms = [...chatrooms];\n        updatedChatrooms.splice(index, 1);\n        setChatrooms(updatedChatrooms);\n\n        // Determine the next chat room to navigate to\n        let nextChatroomIndex;\n        if (index === 0 && updatedChatrooms.length > 0) {\n          nextChatroomIndex = 0; // If deleting the first chat room, navigate to the new first chat room\n        } else if (index === updatedChatrooms.length) {\n          nextChatroomIndex = updatedChatrooms.length - 1; // If deleting the last chat room, navigate to the new last chat room\n        } else {\n          nextChatroomIndex = index; // Navigate to the chat room that shifted up to the deleted chat room's position\n        }\n        if (updatedChatrooms.length > 0) {\n          // Navigate to the next chat room\n          navigate(`/chats/${updatedChatrooms[nextChatroomIndex].id}`);\n        } else {\n          // If no more chat rooms, navigate to a default route or home page\n          navigate('/');\n        }\n      }\n    }\n  };\n  const handleSelectChatroom = chatroom => {\n    setSelectedChatroom(chatroom);\n    onSelectChatroom(chatroom);\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: \"column\",\n    h: \"100%\",\n    width: \"100%\",\n    mr: \"2\",\n    align: \"center\",\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      flex: \"1\",\n      overflowY: \"auto\",\n      maxHeight: \"calc(100vh - 130px)\",\n      height: \"full\",\n      align: \"center\",\n      justify: \"center\",\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mt: \"4\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"18\",\n          color: \"white\",\n          margin: \"auto\",\n          as: \"b\",\n          children: \"List chat history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        height: \"85%\",\n        overflowY: 'auto',\n        width: \"80%\",\n        className: \"left-sidebar\",\n        children: chatrooms.map((chatroom, index) => /*#__PURE__*/_jsxDEV(Flex, {\n          mt: \"25\",\n          bgColor: selectedChatroom === chatroom ? \"#BBBBBB\" : \"#999999\",\n          w: \"100%\",\n          h: \"40px\",\n          borderRadius: \"10px\",\n          align: \"center\",\n          justify: \"space-between\",\n          _hover: {\n            bgColor: 'gray'\n          },\n          onClick: () => handleSelectChatroom(chatroom),\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: `/chats/${chatroom.id}`,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"16\",\n              color: \"white\",\n              margin: \"auto\",\n              align: \"center\",\n              justify: \"center\",\n              pl: \"4\",\n              children: chatroom.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            _hover: {\n              bgColor: 'transparent'\n            },\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 35\n              }, this),\n              variant: \"ghost\",\n              colorScheme: \"red\",\n              onClick: () => handleDeleteChatroom(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        maxW: \"80%\",\n        mt: \"auto\",\n        mb: \"5\",\n        as: \"button\",\n        bg: \"#545454\",\n        color: \"white\",\n        w: \"230px\",\n        h: \"40px\",\n        fontSize: \"16\",\n        borderRadius: \"20\",\n        align: \"center\",\n        justify: \"center\",\n        onClick: handleCreateChatroom,\n        disabled: !isLogin,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: ['4px', '6px', '8px', '12px', '12px', '15px'],\n          display: {\n            base: 'none',\n            sm: 'none',\n            md: 'none',\n            lg: 'none',\n            xl: 'block'\n          },\n          children: \"Create new chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddIcon, {\n          boxSize: ['12px', '12px', '12px', '12px', '12px', '15px'],\n          ml: ['0', '0', '0', '0', '2', '5'],\n          alignItems: \"center\",\n          justify: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(LeftSideBar, \"lj9loHz0NnAB4LrzF4Vsre48QKo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = LeftSideBar;\nexport default LeftSideBar;\nvar _c;\n$RefreshReg$(_c, \"LeftSideBar\");","map":{"version":3,"names":["React","useState","useEffect","Flex","VStack","Box","Text","IconButton","Container","Link","AddIcon","DeleteIcon","useNavigate","useParams","v4","uuidv4","checkChatroomId","deleteHistory","jsxDEV","_jsxDEV","breakpoints","base","sm","md","lg","xl","LeftSideBar","onCreateChatroom","onSelectChatroom","_s","id","token","localStorage","getItem","isLogin","setIsLogin","chatrooms","setChatrooms","savedChatrooms","JSON","parse","selectedChatroom","setSelectedChatroom","navigate","setItem","stringify","handleCreateChatroom","newChatroomName","length","newUUID","newChatroom","name","handleDeleteChatroom","index","chatroomId","uuidInDB","error","console","log","updatedChatrooms","splice","nextChatroomIndex","res","handleSelectChatroom","chatroom","direction","h","width","mr","align","justify","children","flex","overflowY","maxHeight","height","mt","fontSize","color","margin","as","fileName","_jsxFileName","lineNumber","columnNumber","className","map","bgColor","w","borderRadius","_hover","onClick","href","pl","icon","variant","colorScheme","maxW","mb","bg","disabled","display","boxSize","ml","alignItems","_c","$RefreshReg$"],"sources":["C:/Users/Koptorinw/Documents/GitHub/TPR/Senior_code/ai-tpr-proj/src/components/leftSideBar.jsx"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { Flex, VStack, Box, Text, IconButton, Container,Link} from '@chakra-ui/react';\r\nimport { AddIcon, DeleteIcon } from '@chakra-ui/icons';\r\nimport './ScrollBar.css';\r\nimport { useNavigate,useParams } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { checkChatroomId, deleteHistory } from '../function/chatHistory';\r\n\r\n\r\nconst breakpoints = {\r\n  base: '0px',\r\n  sm: '320px',\r\n  md: '768px',\r\n  lg: '960px',\r\n  xl: '1200px',\r\n  '2xl': '1536px',\r\n  \r\n}\r\n\r\n\r\n\r\nconst LeftSideBar = ({ onCreateChatroom, onSelectChatroom }) => {\r\n  const { id } = useParams();\r\n  const token = localStorage.getItem('token');\r\n  const [isLogin, setIsLogin] = useState(token ? true : false);\r\n\r\n  const [chatrooms, setChatrooms] = useState(() => {\r\n    // Initialize chatrooms state with value from local storage, if available\r\n    const savedChatrooms = localStorage.getItem('chatrooms');\r\n    return savedChatrooms ? JSON.parse(savedChatrooms) : [];\r\n  });\r\n  const [selectedChatroom, setSelectedChatroom] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Save chatrooms to local storage whenever it changes\r\n    if(token) {\r\n    localStorage.setItem('chatrooms', JSON.stringify(chatrooms));\r\n    }\r\n  }, [chatrooms]);\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setChatrooms([]);    \r\n    }\r\n  }, [token]);\r\n\r\n  const handleCreateChatroom = () => {\r\n    const newChatroomName = `Chatroom ${chatrooms.length + 1}`;\r\n    const newUUID = uuidv4();\r\n    if(token){\r\n    const newChatroom = { id: newUUID, name: newChatroomName };\r\n    setChatrooms([newChatroom, ...chatrooms]);\r\n    setSelectedChatroom(newChatroom);\r\n    onCreateChatroom(newChatroom);\r\n\r\n    // Navigate to the newly created chatroom\r\n    navigate(`/chats/${newUUID}`);\r\n  }\r\n  };\r\n  \r\n  const handleDeleteChatroom = async (index) => {\r\n    const chatroomId = chatrooms[index].id; // Get the UUID of the chatroom to delete\r\n    const uuidInDB = await checkChatroomId(chatroomId);\r\n    if(uuidInDB.error){\r\n      console.log(\"Error:\",uuidInDB.error);\r\n      const updatedChatrooms = [...chatrooms];\r\n      updatedChatrooms.splice(index, 1);\r\n      setChatrooms(updatedChatrooms);\r\n      \r\n      // Determine the next chat room to navigate to\r\n      let nextChatroomIndex;\r\n      if (index === 0 && updatedChatrooms.length > 0) {\r\n        nextChatroomIndex = 0; // If deleting the first chat room, navigate to the new first chat room\r\n      } else if (index === updatedChatrooms.length) {\r\n        nextChatroomIndex = updatedChatrooms.length - 1; // If deleting the last chat room, navigate to the new last chat room\r\n      } else {\r\n        nextChatroomIndex = index; // Navigate to the chat room that shifted up to the deleted chat room's position\r\n      }\r\n    \r\n      if (updatedChatrooms.length > 0) {\r\n        // Navigate to the next chat room\r\n        navigate(`/chats/${updatedChatrooms[nextChatroomIndex].id}`);\r\n      } else {\r\n        // If no more chat rooms, navigate to a default route or home page\r\n        navigate('/');\r\n      }\r\n    } else{\r\n      console.log(\"Delete\");\r\n      const res = await deleteHistory(chatroomId); // Pass the chatroom ID to deleteHistory function\r\n      \r\n    if (res === 200) {\r\n      const updatedChatrooms = [...chatrooms];\r\n      updatedChatrooms.splice(index, 1);\r\n      setChatrooms(updatedChatrooms);\r\n      \r\n      // Determine the next chat room to navigate to\r\n      let nextChatroomIndex;\r\n      if (index === 0 && updatedChatrooms.length > 0) {\r\n        nextChatroomIndex = 0; // If deleting the first chat room, navigate to the new first chat room\r\n      } else if (index === updatedChatrooms.length) {\r\n        nextChatroomIndex = updatedChatrooms.length - 1; // If deleting the last chat room, navigate to the new last chat room\r\n      } else {\r\n        nextChatroomIndex = index; // Navigate to the chat room that shifted up to the deleted chat room's position\r\n      }\r\n    \r\n      if (updatedChatrooms.length > 0) {\r\n        // Navigate to the next chat room\r\n        navigate(`/chats/${updatedChatrooms[nextChatroomIndex].id}`);\r\n      } else {\r\n        // If no more chat rooms, navigate to a default route or home page\r\n        navigate('/');\r\n      }\r\n    } \r\n    }\r\n    \r\n  };\r\n  \r\n\r\n    \r\n  \r\n\r\n  const handleSelectChatroom = (chatroom) => {\r\n    setSelectedChatroom(chatroom);\r\n    onSelectChatroom(chatroom);\r\n  };\r\n\r\n  return (\r\n    <Flex direction=\"column\" h='100%' width=\"100%\" mr=\"2\" align=\"center\" justify=\"center\">\r\n      <VStack flex=\"1\" overflowY=\"auto\" maxHeight=\"calc(100vh - 130px)\" height='full' align=\"center\" justify=\"center\" width='100%'>\r\n        <Box mt='4'>\r\n          <Text fontSize=\"18\" color=\"white\" margin=\"auto\" as=\"b\">\r\n            List chat history\r\n          </Text>\r\n        </Box>\r\n        <VStack height='85%' overflowY={'auto'} width='80%' className=\"left-sidebar\">\r\n          {chatrooms.map((chatroom, index) => (\r\n            <Flex key={index} mt=\"25\" bgColor={selectedChatroom === chatroom ? \"#BBBBBB\" : \"#999999\"} w=\"100%\" h=\"40px\" borderRadius=\"10px\" align=\"center\" justify=\"space-between\" _hover={{ bgColor: 'gray' }} onClick={() => handleSelectChatroom(chatroom)}>\r\n              <Link href={`/chats/${chatroom.id}`} > \r\n                <Text fontSize=\"16\" color=\"white\" margin=\"auto\" align = 'center' justify = 'center' pl=\"4\">\r\n                  {chatroom.name}\r\n                </Text>\r\n              </Link>\r\n              <Box _hover={{ bgColor: 'transparent' }}>\r\n                <IconButton icon={<DeleteIcon />} variant=\"ghost\" colorScheme=\"red\" onClick={() => handleDeleteChatroom(index)} />\r\n              </Box>\r\n            </Flex>\r\n          ))}\r\n        </VStack>\r\n        <Flex  maxW='80%' mt='auto' mb='5' as=\"button\" bg=\"#545454\" color=\"white\" w=\"230px\" h=\"40px\" fontSize=\"16\" borderRadius=\"20\" align=\"center\" justify=\"center\" onClick={handleCreateChatroom} disabled={!isLogin} >\r\n          \r\n          <Text fontSize={['4px', '6px', '8px', '12px', '12px','15px']} display={{ base: 'none', sm: 'none', md: 'none', lg: 'none', xl: 'block' }} >Create new chat</Text>\r\n          <AddIcon boxSize={['12px', '12px', '12px', '12px', '12px','15px']} ml={['0', '0', '0', '0', '2','5']} alignItems='center' justify='center' />\r\n          \r\n        </Flex>\r\n      </VStack>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default LeftSideBar;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}