{"ast":null,"code":"var _jsxFileName = \"D:\\\\Program\\\\Github\\\\Senior_code\\\\ai-tpr-proj\\\\src\\\\components\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(); // Create Context\n\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [themeColor, setThemeColor] = useState(\"\"); // Create state to store theme colors\n  const darkThemeColors = {\n    navbar: \"#333333\",\n    username: \"#CCCCCC\",\n    link: \"#CCCCCC\",\n    settingsIcon: \"#CCCCCC\"\n    // Add other colors according to the part that you want to change to dark.\n  };\n  const changeTheme = color => {\n    setThemeColor(color === \"Dark\" ? darkThemeColors : \"\"); // Set the dark color when selecting Dark theme.\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      themeColor,\n      changeTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"l0XZO9IwlCt+inBG6MB91aSv6mc=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext); // Custom hook to use Context\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","themeColor","setThemeColor","darkThemeColors","navbar","username","link","settingsIcon","changeTheme","color","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["D:/Program/Github/Senior_code/ai-tpr-proj/src/components/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst ThemeContext = createContext(); // Create Context\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [themeColor, setThemeColor] = useState(\"\"); // Create state to store theme colors\r\n  const darkThemeColors = {\r\n    navbar: \"#333333\",\r\n    username: \"#CCCCCC\",\r\n    link: \"#CCCCCC\",\r\n    settingsIcon: \"#CCCCCC\"\r\n    // Add other colors according to the part that you want to change to dark.\r\n    };\r\n\r\n  const changeTheme = (color) => {\r\n    setThemeColor(color === \"Dark\" ? darkThemeColors : \"\"); // Set the dark color when selecting Dark theme.\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ themeColor, changeTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  return useContext(ThemeContext); // Custom hook to use Context\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;;AAEtC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAMU,eAAe,GAAG;IACtBC,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAE,SAAS;IACnBC,IAAI,EAAE,SAAS;IACfC,YAAY,EAAE;IACd;EACA,CAAC;EAEH,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7BP,aAAa,CAACO,KAAK,KAAK,MAAM,GAAGN,eAAe,GAAG,EAAE,CAAC,CAAC,CAAC;EAC1D,CAAC;EAED,oBACEP,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,UAAU;MAAEO;IAAY,CAAE;IAAAT,QAAA,EACvDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACf,EAAA,CAnBWF,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAqB1B,OAAO,MAAMmB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,OAAOxB,UAAU,CAACG,YAAY,CAAC,CAAC,CAAC;AACnC,CAAC;AAACqB,GAAA,CAFWD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}